name: Deploy GitHub/Cloudflare Pages

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: dist/

  deploy:
    if: github.event_name != 'pull_request'
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  deploy-preview:
    if: github.event_name == 'pull_request'
    permissions:
      deployments: write
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact.tar
        uses: actions/download-artifact@v3
        with:
          name: github-pages
      - name: Extract artifact.tar
        run: |
          mkdir -p ./dist
          tar -xf artifact.tar -C ./dist
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1.2.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ secrets.CLOUDFLARE_PAGES_PROJECT_NAME }}
          directory: dist/
          gitHubToken: ${{ github.token }}
          branch: pull/${{ github.event.number }}